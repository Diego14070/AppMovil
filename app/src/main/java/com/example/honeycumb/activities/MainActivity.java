package com.example.honeycumb.activities;import static android.content.ContentValues.TAG;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import android.app.AlertDialog;import android.content.Intent;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import com.example.honeycumb.R;import com.example.honeycumb.activities.models.User;import com.example.honeycumb.activities.Providers.UserProviders;import com.example.honeycumb.activities.Providers.AuthProviders;import com.google.android.gms.auth.api.signin.GoogleSignIn;import com.google.android.gms.auth.api.signin.GoogleSignInAccount;import com.google.android.gms.auth.api.signin.GoogleSignInClient;import com.google.android.gms.auth.api.signin.GoogleSignInOptions;import com.google.android.gms.common.SignInButton;import com.google.android.gms.common.api.ApiException;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.OnSuccessListener;import com.google.android.gms.tasks.Task;import com.google.android.material.textfield.TextInputEditText;import com.google.firebase.auth.AuthResult;import com.google.firebase.firestore.DocumentSnapshot;import dmax.dialog.SpotsDialog;public class MainActivity extends AppCompatActivity {    /*instantiate to the class*/    TextView mtextViewRegister;          /*instansacionde las clases*/    TextInputEditText mTextInputEditTextEmail, mTextInputEditTextPassword;    Button mButtonLogin;    AuthProviders mAutnProviders;        /*authenticate*/    SignInButton msinginButtonGoogle;   /*Button sign in Google*/    private GoogleSignInClient mGoogleSignInClient; /*Method sign google*/    private static final int RC_SIGN_IN=1;    UserProviders mUserProviders;   /*store in colletion*/    AlertDialog mAlertDialog;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        mTextInputEditTextEmail=findViewById(R.id.TextInputEditTextEmail);        mTextInputEditTextPassword=findViewById(R.id.TextInputEditTextPassword);    /*look  for the identifier*/        mtextViewRegister=findViewById(R.id.TextViewRegister);        mButtonLogin=findViewById(R.id.buttonLogin);        msinginButtonGoogle=findViewById(R.id.buttonloginGoogle);        mUserProviders = new UserProviders();        mAutnProviders =new  AuthProviders();        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)                .requestIdToken(getString(R.string.default_web_client_id))                .requestEmail()                .build();        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);        msinginButtonGoogle.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                signInGoogle();            }        });        mAlertDialog= new SpotsDialog.Builder()                .setContext(this)                .setMessage("Espera un momento por favor")                .setCancelable(false)                .build();        mButtonLogin.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Login();            }        });        mtextViewRegister.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent=new Intent(MainActivity.this, RegisterActivity.class);/*metodo para ir a pagina de registro */                startActivity(intent);            }        });    }    private void signInGoogle(){        Intent signInIntent= mGoogleSignInClient.getSignInIntent();        startActivityForResult(signInIntent, RC_SIGN_IN ); /*manda y permite llegar un token*/    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);        if (requestCode == RC_SIGN_IN) {            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);            try {                // Google Sign In was successful, authenticate with Firebase                GoogleSignInAccount account = task.getResult(ApiException.class);                Log.d(TAG, "firebaseAuthWithGoogle:" + account.getId());                firebaseAuthWithGoogle(account);            } catch (ApiException e) {                // Google Sign In failed, update UI appropriately                Log.w(TAG, "Google sign in failed", e);            }        }    }    private void firebaseAuthWithGoogle(GoogleSignInAccount account) {/*autentication with firebase*/        mAlertDialog.show();        mAutnProviders.googlelogin(account)                        .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {                    @Override                    public void onComplete(@NonNull Task<AuthResult> task) {                        mAlertDialog.dismiss();                        if (task.isSuccessful()) {                            // Sign in success, update UI with the signed-in user's information                          String id=mAutnProviders.getUid(); /*identifica esa id */                          checkUserExit(id);                        } else {                            // If sign in fails, display a message to the user.                            Log.w(TAG, "signInWithCredential:failure", task.getException());                            Toast.makeText(MainActivity.this, "No fue posible conectarse con google", Toast.LENGTH_SHORT).show();                        }                    }                });    }    private void checkUserExit( final String id) {        mUserProviders.getUser(id).addOnSuccessListener(new OnSuccessListener<DocumentSnapshot>() {            @Override            public void onSuccess(DocumentSnapshot documentSnapshot) {                if(documentSnapshot.exists()){/*verificar si document is exits*/                    mAlertDialog.dismiss();                    Intent intent =new Intent(MainActivity.this, HomeActivity.class);                    startActivity(intent);                }else{                    String email=mAutnProviders.getEmail();                    User user=new User();                    user.setEmail(email);                    user.setId(id);                    mUserProviders.create(user).addOnCompleteListener(new OnCompleteListener<Void>() {                        @Override                        public void onComplete(@NonNull Task<Void> task) {                            if(task.isSuccessful()){                                Intent intent=new Intent(MainActivity.this, CompletprofileActivity.class);                                startActivity(intent);                            }else {                                Toast.makeText(MainActivity.this, "No se pudo Almacenar el usuario", Toast.LENGTH_SHORT).show();                            }                        }                    });                }            }        });    }    private void Login() {        String email = mTextInputEditTextEmail.getText().toString();        String password = mTextInputEditTextPassword.getText().toString();        mAlertDialog.show();        if (!email.isEmpty()&&!password.isEmpty()) {            mAutnProviders.login(email, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {                @Override                public void onComplete(@NonNull Task<AuthResult> task) {                    mAlertDialog.dismiss();                    if (task.isSuccessful()) {                        Intent intent = new Intent(MainActivity.this, HomeActivity.class);                        startActivity(intent);                    } else {                        Toast.makeText(MainActivity.this, "Email y contrase√±a incorrectas", Toast.LENGTH_SHORT).show();                    }                }            });            Log.d("campo", "email" + email);            Log.d("campo", "pasword" + password);        }else{            mAlertDialog.dismiss();            Toast.makeText(this, "Ingrese los Campos    ", Toast.LENGTH_SHORT).show();        }    }}